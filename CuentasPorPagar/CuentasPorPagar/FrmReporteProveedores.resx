<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdReporte.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        egAAAXoBMrnI/AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAS0SURBVHhe7Ztb
        aBRXGMfXS0STWFAxRoma1KpRoq5BTJVAY+yDiVExkcR4Sb3EO94Q24og4qYPakuhIqWhpn0xUn2JiiB4
        K20loIL6UKgF8UEffPFJn0Q5nv/ZM+vM7P9sVslkZnfnwE9mvj2Z7/f9ycasM0aEEB+EXFEJDoJIlDmn
        ghZTgSa2hkFj4AIoKCgUV/6+GwjgMuABFI78RNx/8jwQwCUMIAwgDCAMIAwgDCAMIAyAOaeCFlOR9QHI
        NVgyUVJqoF4S1ADgxpwBZhqcNG/iIBKpkvwpeSmxLmgkoAH0BWbDjFWOAOTaJXkjsW9OSYYGYIFZd+nZ
        1Xv6tUSUTikXS5vWi9bNe8Wa9n2UupVr1UWCGADcmDPATJgNM2KvnhmzR/5AoWTyFPqFbjI1ADuYFfv1
        7JHHOKmta6Sb3WRDAJgV+/Xs8ffFipZNdLObbAgAs1pzS8IA1EHOB4Cfjp+Vz+qTSWVT1f68vDyxak1b
        IIALnODGnN3Y/iYAiYNcJX6waFmTqG/9KifArEkBnOy+JH67eS8nwKxZGcCWb46K1dv3i++6zqvzb3/8
        RZ0fOH7KsS9rAxhTVKxmwdA4X1C7RJ1Hq6od+7I2gGkVURUCvhNwXte8Xp0vamhy7MvaANKFBnDs13Pi
        9KVbOQFmTQogh6HFXCJ+UN+4Tqxq2+GgvGKuem3DkmLx4mJ1RgFnuGMG91yY1ZpbEj9gH4ZmzpmnXtva
        MEG8vVGTUcAZ7pjBPVfanwbDAMIAkgN4dn6haK4pCiRw8zyAf05V2r84UMDN8wB6YhWqNmZskdjz9eFA
        ABc4wc3zADoPTFe1yvmf03+e8gO4wAlungfQsblM1b6sa6AyfgAXOMHN8wD2NJaoWkvbRioDYl1nxcYj
        Hf0Krsl6AbjACW6eB7C6Nv5+27H/IJUBpQuqrYv3G7gm6wXggj1w8zyAxZWjVO1wx3EqA+Y3tYjCkkn9
        Cq7JegG4wAluHxOA8dYYC2D2p/HHUr//+QyV8QO4wAlu6QTgvjVmvDnKAigePUzVui5cTBK5/uA/cfXe
        v56CHu6+cIET3NIJwH1zNCqht8fdAby5XiOGDhmkaj03byeJ4FsVr3kJerj7wgWvwQ2OLADj7fGPfUDi
        r4ePkkT8CgAubG8K3j8ggT90CGk/IoNbUW4J4NdbAFi3x/qAPyJjR65UD0m1SsS44vFUwk/gBDftyNxT
        PySVDnI1S8SMilmO5qOnTlffmgMJetod4AQ3ODJ3E7RoQq7daLLwi1pH8yHDR1jNBwz0tDvASb+2m7mb
        oEUTcsXQpKGx2dF8W8cJ+uurl6Cn3QFOOoAYczdBiybk6kSTti07Hc2DAJx0AJ3M3QQtmpCrB032HTpC
        JfwETjqAHuZughZNyNWLJrEffko0Xrxhq69YHnDSAfQydxO0aEIu9bnh9O/dica6qW9YHnDStcfM3QQt
        mpDrFZp0X76WaIyPqX5iecBJB/CKuZugRYZc+bqBuNp7P9E4KMDJ8oMrm4FBiwy5yqwGd/5/SiX8BE6W
        H1zZDAxaZMiFzwoiP7+A/vfVIAA3HUDid/2+oEWGXMv1xTOB5WwGBi0y5Gq3NQg67WyGZETkHS30ex5z
        VcDfAAAAAElFTkSuQmCC
</value>
  </data>
</root>